const auth2fa = require("../..");

describe("Utils", () => {
    it("base32toHex", () => {
        const b32Str = [
            // RFC4658 test vectors
            "MY======",
            "MZXQ====",
            "MZXW6===",
            "MZXW6YQ=",
            "MZXW6YTB",
            "MZXW6YTBOI======",
            // random data got it from here https://github.com/LinusU/base32-encode/blob/master/test.js
            "OM======",
            "7AGA====",
            "MRIA====",
            "ZSI5A===",
            "NRQMA===",
            "J5VCG===",
            "RC2E6GA=",
            "SC5NARYU",
            "5HXR334AQY======",
            "QP7D7HA6SMBA====",
            "CWVB67FPYF6LQ===",
            "3JI5J7WURNGDFXA=",
            "YS7BIIUFCLLSTGBR",
            "F4TTYW266BDSJ6VZIQ======",
            "S2O2DOAOYJCC2K65JPNQ====",
            "GH223NIHSL2UTU3RJ47ZS===",
            "NJSU66QHFQUZKGJQOAGAUYI=",
            "B7RJ22BFVWMZ5B6ZW7FMGWE5",
            "B6LAVNCOCZMXHJIXFTGSSSZUCI======",
            "GJNZ7WCHUQP3BVEFYID2DJNQFXHQ====",
            "3X4A5PRBX4NR4EVGJROMNJ2LLWJN2===",
            "YDFOKLDPMQOOAST64W42R6UN5UJBXSQ=",
            "Q4UEBI2VZDDQLBXUMLE6M2POOYGLGU36",
            "K5Z74ITGFAMKCIGFNCECJSJV7YAYECFESY======",
            "IFXCHK6FETI3QVZW4K7KNT7M2UMSPCIDJIUA====",
            "QPJDQ3V527UOQGHMADR4ZWECVKJTXEC3PYXEI===",
            "UL5IXCA7HOACJ5JHIV3DYSXAR2QSXX4L54NHF6A=",
            "WB2K5C467XQPC7ZXXTFN3YAG2A4ZS62ZZDX3AWW5",
            "OZH67FA25Z7EC3OCASXFVOOFXHHGIRLHPGHGQSNOVE======",
            "JGK5TAI7G72ZPF6XYO43TZJSLKTYE52BL5YPJLGPLCGA====",
            "ETYICLFI53KYG5GBDJYAR4FSMJUYW4X5E6JHBEQI5KWLE===",
            "24DJEVBYCDKL6UGYDT2EUVMADJKXUOEKGQJWPR7KA56KGBQ=",
            "NYEKRHFDNNTX76H6THTIUESBZDMM54SXBJPWBNSBPUSTRMYM",
            "6L6CGGN5FFCXZTIB5DQZJ3U327UXFGFWMEG7JKYPHVN2UCZNPTHWTAU63N2O33Y="
        ];
        const hexStr = [
            // RFC4658 test vectors
            "66",
            "666f",
            "666f6f",
            "666f6f62",
            "666f6f6261",
            "666f6f626172",
            // random data - got it from here https://github.com/LinusU/base32-encode/blob/master/test.js
            "73",
            "f80c",
            "6450",
            "cc91d0",
            "6c60c0",
            "4f6a23",
            "88b44f18",
            "90bad04714",
            "e9ef1def8086",
            "83fe3f9c1e9302",
            "15aa1f7cafc17cb8",
            "da51d4fed48b4c32dc",
            "c4be14228512d7299831",
            "2f273c5b5ef04724fab944",
            "969da1b80ec2442d2bdd4bdb",
            "31f5adb50792f549d3714f3f99",
            "6a654f7a072c29951930700c0a61",
            "0fe29d6825ad999e87d9b7cac3589d",
            "0f960ab44e165973a5172ccd294b3412",
            "325b9fd847a41fb0d485c207a1a5b02dcf",
            "ddf80ebe21bf1b1e12a64c5cc6a74b5d92dd",
            "c0cae52c6f641ce04a7ee5b9a8fa8ded121bca",
            "872840a355c8c70586f462c9e669ee760cb3537e",
            "5773fe22662818a120c5688824c935fe018208a496",
            "416e23abc524d1b85736e2bea6cfecd5192789034a28",
            "83d2386ebdd7e8e818ec00e3ccd882aa933b905b7e2e44",
            "a2fa8b881f3b8024f52745763c4ae08ea12bdf8bef1a72f8",
            "b074ae8b9efde0f17f37bccadde006d039997b59c8efb05add",
            "764fef941aee7e416dc204ae5ab9c5b9ce644567798e6849aea9",
            "4995d9811f37f59797d7c3b9b9e5325aa78277415f70f4accf588c",
            "24f0812ca8eed58374c11a7008f0b262698b72fd2792709208eaacb2",
            "d70692543810d4bf50d81cf44a55801a557a388a341367c7ea077ca306",
            "6e08a89ca36b677ff8fe99e68a1241c8d8cef2570a5f60b6417d2538b30c",
            "f2fc2319bd29457ccd01e8e194ee9bd7e97298b6610df4ab0f3d5baa0b2d7ccf69829edb74edef"
        ];

        for (let i = 0; i < b32Str.length; i++) {
            const b32Data = b32Str[i];
            const hexRes = hexStr[i];

            const res = auth2fa.Utils.base32toHex(b32Data);
            expect(res).toEqual(hexRes);
        }
    });

    it("hexToBytes", () => {
        const hexStr = [
            "0",
            "00",
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "0A",
            "0B",
            "0C",
            "0D",
            "0E",
            "0F",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "1A",
            "1B",
            "1C",
            "1D",
            "1E",
            "1F",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "2A",
            "2B",
            "2C",
            "2D",
            "2E",
            "2F",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "3A",
            "3B",
            "3C",
            "3D",
            "3E",
            "3F",
            "40",
            "41",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "48",
            "49",
            "4A",
            "4B",
            "4C",
            "4D",
            "4E",
            "4F",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "5A",
            "5B",
            "5C",
            "5D",
            "5E",
            "5F",
            "60",
            "61",
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "6A",
            "6B",
            "6C",
            "6D",
            "6E",
            "6F",
            "70",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "7A",
            "7B",
            "7C",
            "7D",
            "7E",
            "7F",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "8A",
            "8B",
            "8C",
            "8D",
            "8E",
            "8F",
            "90",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "9A",
            "9B",
            "9C",
            "9D",
            "9E",
            "9F",
            "A0",
            "A1",
            "A2",
            "A3",
            "A4",
            "A5",
            "A6",
            "A7",
            "A8",
            "A9",
            "AA",
            "AB",
            "AC",
            "AD",
            "AE",
            "AF",
            "B0",
            "B1",
            "B2",
            "B3",
            "B4",
            "B5",
            "B6",
            "B7",
            "B8",
            "B9",
            "BA",
            "BB",
            "BC",
            "BD",
            "BE",
            "BF",
            "C0",
            "C1",
            "C2",
            "C3",
            "C4",
            "C5",
            "C6",
            "C7",
            "C8",
            "C9",
            "CA",
            "CB",
            "CC",
            "CD",
            "CE",
            "CF",
            "D0",
            "D1",
            "D2",
            "D3",
            "D4",
            "D5",
            "D6",
            "D7",
            "D8",
            "D9",
            "DA",
            "DB",
            "DC",
            "DD",
            "DE",
            "DF",
            "E0",
            "E1",
            "E2",
            "E3",
            "E4",
            "E5",
            "E6",
            "E7",
            "E8",
            "E9",
            "EA",
            "EB",
            "EC",
            "ED",
            "EE",
            "EF",
            "F0",
            "F1",
            "F2",
            "F3",
            "F4",
            "F5",
            "F6",
            "F7",
            "F8",
            "F9",
            "FA",
            "FB",
            "FC",
            "FD",
            "FE",
            "FF",
            "2f7",
            "ffff",
            "0c111a",
            "be41da5",
            "0c66111285",
            "0f0c0d5aab3a4",
            "535524da13b83f960a",
            "7dcb683343e77bea2481cca0c5d",
            "92bdfa1744529b8d961c26fe6e9c999644ea1f34591",
            "3df06226400ad318c29f38de6e44e577923c785ed373821adc986bbdf45cb6cd",
            "980e12cd94fcc213b6fb532f446d7ee5f430e41c7b14acb3893377851b2dce2f16e57da"
        ];

        const bytesArr = [
            [0],
            [0],
            [1],
            [2],
            [3],
            [4],
            [5],
            [6],
            [7],
            [8],
            [9],
            [10],
            [11],
            [12],
            [13],
            [14],
            [15],
            [16],
            [17],
            [18],
            [19],
            [20],
            [21],
            [22],
            [23],
            [24],
            [25],
            [26],
            [27],
            [28],
            [29],
            [30],
            [31],
            [32],
            [33],
            [34],
            [35],
            [36],
            [37],
            [38],
            [39],
            [40],
            [41],
            [42],
            [43],
            [44],
            [45],
            [46],
            [47],
            [48],
            [49],
            [50],
            [51],
            [52],
            [53],
            [54],
            [55],
            [56],
            [57],
            [58],
            [59],
            [60],
            [61],
            [62],
            [63],
            [64],
            [65],
            [66],
            [67],
            [68],
            [69],
            [70],
            [71],
            [72],
            [73],
            [74],
            [75],
            [76],
            [77],
            [78],
            [79],
            [80],
            [81],
            [82],
            [83],
            [84],
            [85],
            [86],
            [87],
            [88],
            [89],
            [90],
            [91],
            [92],
            [93],
            [94],
            [95],
            [96],
            [97],
            [98],
            [99],
            [100],
            [101],
            [102],
            [103],
            [104],
            [105],
            [106],
            [107],
            [108],
            [109],
            [110],
            [111],
            [112],
            [113],
            [114],
            [115],
            [116],
            [117],
            [118],
            [119],
            [120],
            [121],
            [122],
            [123],
            [124],
            [125],
            [126],
            [127],
            [128],
            [129],
            [130],
            [131],
            [132],
            [133],
            [134],
            [135],
            [136],
            [137],
            [138],
            [139],
            [140],
            [141],
            [142],
            [143],
            [144],
            [145],
            [146],
            [147],
            [148],
            [149],
            [150],
            [151],
            [152],
            [153],
            [154],
            [155],
            [156],
            [157],
            [158],
            [159],
            [160],
            [161],
            [162],
            [163],
            [164],
            [165],
            [166],
            [167],
            [168],
            [169],
            [170],
            [171],
            [172],
            [173],
            [174],
            [175],
            [176],
            [177],
            [178],
            [179],
            [180],
            [181],
            [182],
            [183],
            [184],
            [185],
            [186],
            [187],
            [188],
            [189],
            [190],
            [191],
            [192],
            [193],
            [194],
            [195],
            [196],
            [197],
            [198],
            [199],
            [200],
            [201],
            [202],
            [203],
            [204],
            [205],
            [206],
            [207],
            [208],
            [209],
            [210],
            [211],
            [212],
            [213],
            [214],
            [215],
            [216],
            [217],
            [218],
            [219],
            [220],
            [221],
            [222],
            [223],
            [224],
            [225],
            [226],
            [227],
            [228],
            [229],
            [230],
            [231],
            [232],
            [233],
            [234],
            [235],
            [236],
            [237],
            [238],
            [239],
            [240],
            [241],
            [242],
            [243],
            [244],
            [245],
            [246],
            [247],
            [248],
            [249],
            [250],
            [251],
            [252],
            [253],
            [254],
            [255],
            [47, 7],
            [255, 255],
            [12, 17, 26],
            [190, 65, 218, 5],
            [12, 102, 17, 18, 133],
            [15, 12, 13, 90, 171, 58, 4],
            [83, 85, 36, 218, 19, 184, 63, 150, 10],
            [125, 203, 104, 51, 67, 231, 123, 234, 36, 129, 204, 160, 197, 13],
            [146, 189, 250, 23, 68, 82, 155, 141, 150, 28, 38, 254, 110, 156, 153, 150, 68, 234, 31, 52, 89, 1],
            [
                61, 240, 98, 38, 64, 10, 211, 24, 194, 159, 56, 222, 110, 68, 229, 119, 146, 60, 120, 94, 211, 115, 130,
                26, 220, 152, 107, 189, 244, 92, 182, 205
            ],
            [
                152, 14, 18, 205, 148, 252, 194, 19, 182, 251, 83, 47, 68, 109, 126, 229, 244, 48, 228, 28, 123, 20,
                172, 179, 137, 51, 119, 133, 27, 45, 206, 47, 22, 229, 125, 10
            ]
        ];

        for (let i = 0; i < hexStr.length; i++) {
            const hex = hexStr[i];
            const bytesRes = bytesArr[i];

            const res = auth2fa.Utils.hexToBytes(hex);
            expect(res).toEqual(bytesRes);
        }
    });
});
